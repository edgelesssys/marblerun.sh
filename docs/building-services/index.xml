<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Building services on Marblerun - The Service Mesh for Confidential Computing</title><link>https://marblerun.sh/docs/building-services/</link><description>Recent content in Building services on Marblerun - The Service Mesh for Confidential Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 14 Nov 2020 16:28:16 +0530</lastBuildDate><atom:link href="https://marblerun.sh/docs/building-services/index.xml" rel="self" type="application/rss+xml"/><item><title>EGo</title><link>https://marblerun.sh/docs/building-services/ego/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://marblerun.sh/docs/building-services/ego/</guid><description>Building a service: EGo To get your Go service ready for Marblerun, you possibly need to adapt its code slightly and you need to rebuild it. Details are given in the following.
&amp;nbsp;Note Future versions of EGo will support building Marblerun services with zero changes. Make your service use the provided TLS credentials If your service already uses TLS and gets the credentials from, e.g., a file, you just need to adapt the Manifest.</description></item><item><title>Graphene</title><link>https://marblerun.sh/docs/building-services/graphene/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://marblerun.sh/docs/building-services/graphene/</guid><description>Building a service: Graphene Running a Graphene app with Marblerun requires some changes to its manifest. These are explained in the following. See also the helloworld example.
Requirements First, get Graphene up and running. You can use either the Building or Cloud Deployment guide to build and initially setup Graphene.
Before running your application, make sure you got the prerequisites for ECDSA remote attestation installed on your system. You can collectively install them with the following command:</description></item></channel></rss>